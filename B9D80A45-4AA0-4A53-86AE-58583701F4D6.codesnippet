<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>FullTableView</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>CodeExpression</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>   UITableView *homePageTableView = [[UITableView alloc]initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT) style:UITableViewStyleGrouped];
   homePageTableView.backgroundColor = [UIColor whiteColor];
   homePageTableView.separatorStyle = UITableViewCellSeparatorStyleNone;//分割线颜色
   homePageTableView.allowsSelection = NO;//不让点击
   
   homePageTableView.delegate = self;
   homePageTableView.dataSource = self;
   
   [self.view addSubview:homePageTableView];
   
//    [homePageTableView mas_makeConstraints:^(MASConstraintMaker *make) {
//        if (IS_iPhoneX) {
//            make.left.equalTo(weakSelf.view.mas_safeAreaLayoutGuideLeft);
//            make.right.equalTo(weakSelf.view.mas_safeAreaLayoutGuideRight);
//            make.top.equalTo(weakSelf.view.mas_safeAreaLayoutGuideTop);
//            make.bottom.equalTo(weakSelf.view.mas_safeAreaLayoutGuideBottom);
//        } else {
//            make.leading.trailing.top.bottom.equalTo(weakSelf.view);
//        }
//    }];

}

#pragma mark ----UITableViewDataSource----
//1.设置行数(如果有分区的话,可以通过if判断每个分区,然后给每个分区赋不同的行数)
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    if (section) {
        return 0;
    }
    return 1;
}
//2.UITableViewCell, 单元格类, 继承于UIView, 用于在UITableView上显示内容
//注:会执行多次, 每走一次, 创建一个cell; 第一次只创建出一个屏幕能够显示的cell,如果滚动tableView, 会再走这个方法,再次创建cell
-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
   //a.定义重用标示,static 静态变量,初始化一次, 降低内存的消耗
   static NSString *identifier = @"CELL";
   //b.去重用队列中根据标识符取可重用的 cell
   UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier];
   //c. 判断是否获取到可重用的 cell( 最后要空间释放 )
   if (!cell) {//!cell 相当于 cell == nil
       cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:identifier];
       cell.accessoryType = UITableViewCellAccessoryDetailDisclosureButton;//辅助标示类型
       
   }
   //显示内容
   
//    cell.imageView.image = [UIImage imageNamed:@""];
   cell.textLabel.text = @"李四";
   cell.detailTextLabel.text = @"我是李四";
   return cell;
}
//1.设置分组个数section
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
   return 7;//返回多少就是多少个分区
}
//2.设置区头(section)
-(NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section{
   NSArray *array = @[@"A", @"B", @"C"];
   return array[section];
}
//3.设置区尾
-(NSString *)tableView:(UITableView *)tableView titleForFooterInSection:(NSInteger)section{
   NSArray *array = @[@"AAA", @"BBB", @"CCC"];
   return array[section];
}
//4.右侧添加一个索引表
-(NSArray *)sectionIndexTitlesForTableView:(UITableView *)tableView{
   NSArray *aa = @[@"A", @"B", @"C"];
   return aa;
}

#pragma mark ----UITableViewDelegate----
//1.将显示单元格
- (void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath{
   NSLog(@"%s", __FUNCTION__);
}
//2.自定义区头视图
- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section{
   if (section == 0) {
       //顶部搜索栏,定位,图片
       _topSearchView = [[TopSearchView alloc]initWithFrame:CGRectZero];
       _topSearchView.backgroundColor = [UIColor orangeColor];

       [_topSearchView mas_makeConstraints:^(MASConstraintMaker *make) {
           make.size.mas_equalTo(CGSizeMake(SCREEN_WIDTH, SCREEN_HEIGHT/4));
           make.centerY.equalTo(self.view);
           make.top.equalTo(self.view).with.offset(0);
       }];
       return _topSearchView;
   }else{
       UIView *hearderView = [[UIView alloc] initWithFrame:CGRectMake(10, 0, SCREEN_WIDTH-20, 44)];
       hearderView.backgroundColor = [UIColor yellowColor];
       
       return hearderView;
   }
}
//3.自定义区尾视图
- (UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section{
   UIView *hearderView = [[UIView alloc] initWithFrame:CGRectMake(10, 0, SCREEN_WIDTH-20, 44)];
   hearderView.backgroundColor = [UIColor yellowColor];
   
   return hearderView;
}
//4.设置每行间隔的高度
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
   return 80;
}
//5.选择哪一section的哪一行
-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
   NSLog(@"section: %ld, row: %ld", indexPath.section, indexPath.row);
}
//6.设置选中的行所执行的动作
-(NSIndexPath *)tableView:(UITableView *)tableView willSelectRowAtIndexPath:(NSIndexPath *)indexPath{
   //NSLog(@"%s",__FUNCTION__);
   //NSUInteger row = [indexPath row];
   return indexPath;
}
//设置让UITableView行缩进
-(NSInteger)tableView:(UITableView *)tableView indentationLevelForRowAtIndexPath:(NSIndexPath *)indexPath{
   NSLog(@"%s",__FUNCTION__);
   NSUInteger row = [indexPath row];
   return row;
}</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>B9D80A45-4AA0-4A53-86AE-58583701F4D6</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetSummary</key>
	<string>TableView初始化和代理</string>
	<key>IDECodeSnippetTitle</key>
	<string>TableView：Full</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
